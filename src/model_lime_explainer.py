import pandas as pd
import numpy as np
import os
import matplotlib.pyplot as plt
from lime.lime_tabular import LimeTabularExplainer
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report

# Caminho do dataset
caminho_dataset = os.path.join(os.path.dirname(__file__), '../data/german.data')

# Nomes das colunas com tradu√ß√£o
colunas = [
    "status_conta", "dura√ß√£o", "hist√≥rico_cr√©dito", "prop√≥sito", "valor_cr√©dito",
    "conta_poupan√ßa", "emprego_desde", "taxa_parcelamento", "sexo_estado_civil", "garantia",
    "resid√™ncia_anos", "propriedade", "idade", "outros_planos", "habita√ß√£o",
    "n√∫mero_cr√©ditos", "trabalho", "trabalhador_estrangeiro", "telefone", "classe"
]

# Carregamento do dataset
df = pd.read_csv(caminho_dataset, sep=' ', header=None, names=colunas)

# Separa√ß√£o entre atributos e r√≥tulos
X = df.drop("classe", axis=1)
y = df["classe"]

# Divis√£o em treino/teste
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Treinamento do modelo
modelo = RandomForestClassifier(n_estimators=100, random_state=42)
modelo.fit(X_train, y_train)

# Avalia√ß√£o
print("Relat√≥rio de Classifica√ß√£o:\n")
y_pred = modelo.predict(X_test)
print(classification_report(y_test, y_pred))

# Prepara√ß√£o para o LIME
explainer = LimeTabularExplainer(
    X_train.values,
    feature_names=X.columns,
    class_names=['Bom Pagador', 'Mal Pagador'],
    discretize_continuous=True,
    mode="classification"
)

# Sele√ß√£o de exemplos
X_test_np = X_test.to_numpy()
y_pred = modelo.predict(X_test)

idx_bom = np.where(y_pred == 1)[0][0]
idx_mal = np.where(y_pred == 2)[0][0]
inst_bom = X_test_np[idx_bom]
inst_mal = X_test_np[idx_mal]

# Fun√ß√£o para gerar explica√ß√µes LIME + PNG
def gerar_explicacao(instancia, nome_arquivo, titulo):
    exp = explainer.explain_instance(instancia, modelo.predict_proba, num_features=10)
    fig = exp.as_pyplot_figure(label=exp.available_labels()[0])
    
    # Customiza√ß√µes
    plt.title(titulo)
    plt.xlabel("Contribui√ß√£o para a decis√£o")
    handles, labels = plt.gca().get_legend_handles_labels()
    if handles:
        plt.legend(
            handles=handles,
            labels=["üü† Laranja: Caracter√≠sticas que aumentam a chance de ser classificado como 'Mal Pagador'.",
                    "üîµ Azul: Caracter√≠sticas que aumentam a chance de ser classificado como 'Bom Pagador'."],
            loc='lower center', bbox_to_anchor=(0.5, -0.25), fontsize=8
        )

    caminho_img = os.path.join(os.path.dirname(__file__), f"../img/{nome_arquivo}.png")
    plt.savefig(caminho_img, bbox_inches="tight")
    plt.close()

    explicacoes = []
    for feature, peso in exp.as_list(label=exp.available_labels()[0]):
        cor = "üü†" if peso > 0 else "üîµ"
        direcao = "Mal Pagador" if peso > 0 else "Bom Pagador"
        explicacoes.append(f"{cor} A caracter√≠stica {feature} contribuiu para classificar como {direcao}.")

    return explicacoes

# Gera√ß√£o dos gr√°ficos e frases explicativas
frases_bom = gerar_explicacao(inst_bom, "grafico_bom_pagador", "Por que o modelo classificou como 'Bom Pagador'?")
frases_mal = gerar_explicacao(inst_mal, "grafico_mal_pagador", "Por que o modelo classificou como 'Mal Pagador'?")

# Impress√£o das explica√ß√µes
print("\n‚úÖ Explica√ß√µes para Bom Pagador:")
for frase in frases_bom:
    print("-", frase)

print("\n‚úÖ Explica√ß√µes para Mal Pagador:")
for frase in frases_mal:
    print("-", frase)

# Explica√ß√£o final geral
print("\nüìò Defini√ß√µes gerais utilizadas pelo modelo:")

print("""
‚úÖ Bom Pagador
Um cliente √© classificado como Bom Pagador quando possui um perfil que sugere baixo risco de inadimpl√™ncia. Entre os principais fatores que influenciam positivamente est√£o:

- Ter uma conta banc√°ria ativa com bom hist√≥rico de movimenta√ß√£o.
- Apresentar um bom hist√≥rico de cr√©dito (pagamentos anteriores em dia).
- Ter uma idade mais avan√ßada, geralmente acima dos 30 anos, o que indica maior estabilidade.
- Solicitar valores de cr√©dito mais baixos ou proporcionais √† renda.
- Estar empregado h√° mais tempo, demonstrando estabilidade profissional.
- Ter objetivos de cr√©dito claros e seguros, como aquisi√ß√£o de bens essenciais.
- Possuir bens no nome (como carro ou im√≥vel).
- Ter telefone ativo, o que sugere maior rastreabilidade e transpar√™ncia.

‚ùå Mal Pagador
Um cliente √© classificado como Mal Pagador quando o modelo identifica um conjunto de caracter√≠sticas associadas a maior risco de inadimpl√™ncia. Entre os fatores mais comuns est√£o:

- Aus√™ncia de conta banc√°ria ativa ou movimenta√ß√µes suspeitas.
- Hist√≥rico de cr√©dito ruim ou inexistente.
- Idade muito baixa, indicando pouca experi√™ncia financeira.
- Solicita√ß√£o de valores elevados de cr√©dito, desproporcionais √† estabilidade demonstrada.
- Pouco tempo no emprego atual.
- Falta de reserva financeira (como conta poupan√ßa ou investimentos).
- Motiva√ß√µes de cr√©dito mais arriscadas, como empr√©stimos para consumo n√£o essencial.
- Aus√™ncia de patrim√¥nio registrado ou garantias.
""")
